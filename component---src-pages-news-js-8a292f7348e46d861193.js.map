{"version":3,"sources":["webpack:///./src/pages/news.js","webpack:///./src/components/CardImage.js","webpack:///./src/components/ClassCard.js"],"names":["Grid","styled","div","breakpoints","md","lg","xl","Link","GatsbyLink","GridItem","NewsPage","allNews","data","allPrismicNews","edges","map","edge","node","sort","a","b","is_featured","published_at","news","i","key","to","uid","image","title","text","description","body","date","embedText","featured","Image","props","url","grayscale","Wrapper","EmbeddedText","FeaturedText","span","ClassCard","CardImage","format","Date","render","raw"],"mappings":"2FAAA,+FAUMA,EAAOC,IAAOC,IAAV,6DAAGD,CAAH,qPAKaE,IAAYC,GAIZD,IAAYE,GAIZF,IAAYG,IAI7BC,EAAON,YAAOO,KAAV,6DAAGP,CAAH,sDAKJQ,EAAWR,IAAOC,IAAV,iEAAGD,CAAH,2FAKSE,IAAYC,IA6EpBM,UAtEE,SAAC,GAAc,IACxBC,EADuB,EAAXC,KACGC,eAAeC,MACjCC,KAAI,SAACC,GAAD,OAAUA,EAAKC,QACnBC,MAAK,SAACC,EAAGC,GACR,OAAID,EAAEP,KAAKS,cAAgBD,EAAER,KAAKS,aACxB,EAGND,EAAER,KAAKS,cAAgBF,EAAEP,KAAKS,YACzB,EAGLF,EAAEP,KAAKU,cAAgBF,EAAER,KAAKU,cACxB,EACCH,EAAEP,KAAKU,aAAeF,EAAER,KAAKU,aAC/B,EAGF,KAEX,OACE,gBAAC,IAAD,KACE,6DACA,gBAAC,IAAD,aACA,gBAACtB,EAAD,KACGW,EAAQI,KAAI,SAACQ,EAAMC,GAAP,OACX,gBAACf,EAAD,CAAUgB,IAAKD,GACb,gBAACjB,EAAD,CAAMmB,GAAE,SAAWH,EAAKI,KACtB,gBAAC,IAAD,CACEC,MAAOL,EAAKX,KAAKgB,MACjBC,MAAON,EAAKX,KAAKiB,MAAMC,KACvBC,YAAaR,EAAKX,KAAKoB,KACvBC,KAAMV,EAAKX,KAAKU,aAChBY,UAAiB,IAANV,EACXW,SAAUZ,EAAKX,KAAKS,uB,sFC9BrBe,EA7CDnC,IAAOC,IAAV,mEAAGD,CAAH,wiBAciB,SAACoC,GAAD,OAAWA,EAAMC,OAEvC,SAACD,GAAD,OAAYA,EAAME,UAAY,2BAA6B,MCZ3DC,EAAUvC,IAAOC,IAAV,yEAAGD,CAAH,2DAMPwC,EAAexC,IAAOC,IAAV,8EAAGD,CAAH,gGAQZyC,EAAezC,IAAO0C,KAAV,8EAAG1C,CAAH,iJA4CH2C,IAjCG,SAAC,GAQZ,IAPLf,EAOI,EAPJA,MACAE,EAMI,EANJA,YACAE,EAKI,EALJA,KAKI,IAJJL,aAII,MAJI,GAIJ,MAHJM,iBAGI,aAFJC,gBAEI,aADJI,iBACI,SACJ,OACE,gBAACC,EAAD,KACGL,GAAY,gBAACO,EAAD,iBACZR,GACC,gBAACW,EAAD,CAAWP,IAAKV,EAAMU,IAAKC,UAAWA,GACpC,gBAACE,EAAD,KACGR,GAAQ,6BAAQa,YAAO,IAAIC,KAAKd,GAAO,QACxC,0BAAKJ,GACJE,GAAe,gBAAC,WAAD,CAAUiB,OAAQjB,EAAYkB,SAIlDf,GACA,gBAAC,WAAD,KACE,gBAACW,EAAD,CAAWP,IAAKV,EAAMU,IAAKC,UAAWA,IACrCN,GAAQ,6BAAQa,YAAO,IAAIC,KAAKd,GAAO,QACxC,0BAAKJ,GACJE,GAAe,gBAAC,WAAD,CAAUiB,OAAQjB,EAAYkB","file":"component---src-pages-news-js-8a292f7348e46d861193.js","sourcesContent":["import * as React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport Title from \"../components/Title\";\nimport Main from \"../components/Main\";\nimport ClassCard from \"../components/ClassCard\";\n\nimport breakpoints from \"../styled/breakpoints\";\n\nconst Grid = styled.div`\n  display: grid;\n  gap: 0.5rem;\n  grid-template-columns: repeat(1, 1fr);\n\n  @media (min-width: ${breakpoints.md}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: ${breakpoints.lg}) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media (min-width: ${breakpoints.xl}) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\nconst Link = styled(GatsbyLink)`\n  color: var(--primary-color);\n  text-decoration: none;\n`;\n\nconst GridItem = styled.div`\n  &:first-child {\n    grid-column: 1;\n  }\n\n  @media (min-width: ${breakpoints.md}) {\n    &:first-child {\n      grid-column: 1 / 3;\n    }\n  }\n`;\n\nconst NewsPage = ({ data }) => {\n  const allNews = data.allPrismicNews.edges\n    .map((edge) => edge.node)\n    .sort((a, b) => {\n      if (a.data.is_featured && !b.data.is_featured) {\n        return -1;\n      }\n\n      if (b.data.is_featured && !a.data.is_featured) {\n        return 1;\n      }\n\n      if (a.data.published_at >= b.data.published_at) {\n        return -1;\n      } else if (a.data.published_at < b.data.published_at) {\n        return 1;\n      }\n\n      return 0;\n    });\n  return (\n    <Main>\n      <title>News - Laura V Ferguson, PhD</title>\n      <Title>News</Title>\n      <Grid>\n        {allNews.map((news, i) => (\n          <GridItem key={i}>\n            <Link to={`/news/${news.uid}`}>\n              <ClassCard\n                image={news.data.image}\n                title={news.data.title.text}\n                description={news.data.body}\n                date={news.data.published_at}\n                embedText={i === 0}\n                featured={news.data.is_featured}\n              />\n            </Link>\n          </GridItem>\n        ))}\n      </Grid>\n    </Main>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allPrismicNews {\n      edges {\n        node {\n          uid\n          data {\n            title {\n              text\n            }\n            published_at\n            is_featured\n            body {\n              raw\n            }\n            image {\n              url\n              alt\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default NewsPage;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Image = styled.div`\n  position: relative;\n  width: 100%;\n  padding-top: 56.25%;\n\n  border-bottom: 0.25rem solid var(--complementary-color);\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${(props) => props.url});\n    background-size: cover;\n    ${(props) => (props.grayscale ? \"filter: grayscale(100%);\" : \"\")}\n    transition: filter 100ms;\n  }\n\n  &:hover:before {\n    filter: grayscale(0%);\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      335deg,\n      rgba(var(--tertiary-color-rgb), 0.8) 0%,\n      rgba(var(--complementary-rgb), 0.25) 100%\n    );\n    opacity: 1;\n    transition: opacity 100ms;\n  }\n\n  &:hover:after {\n    opacity: 0.2;\n  }\n`;\n\nexport default Image;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { RichText } from \"prismic-reactjs\";\nimport { format } from \"date-fns\";\n\nimport CardImage from \"./CardImage\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst EmbeddedText = styled.div`\n  position: relative;\n  z-index: 1;\n  padding: 0.5rem 1rem;\n  color: white;\n  background: rgba(80, 80, 80, 0.8);\n`;\n\nconst FeaturedText = styled.span`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  color: var(--bg-color);\n  background: var(--tertiary-color);\n  padding: 0.25rem 0.375rem;\n  font-size: 1rem;\n  z-index: 1;\n`;\n\nconst ClassCard = ({\n  title,\n  description,\n  date,\n  image = {},\n  embedText = false,\n  featured = false,\n  grayscale = false,\n}) => {\n  return (\n    <Wrapper>\n      {featured && <FeaturedText>Top-News</FeaturedText>}\n      {embedText && (\n        <CardImage url={image.url} grayscale={grayscale}>\n          <EmbeddedText>\n            {date && <small>{format(new Date(date), \"PPP\")}</small>}\n            <h3>{title}</h3>\n            {description && <RichText render={description.raw} />}\n          </EmbeddedText>\n        </CardImage>\n      )}\n      {!embedText && (\n        <React.Fragment>\n          <CardImage url={image.url} grayscale={grayscale} />\n          {date && <small>{format(new Date(date), \"PPP\")}</small>}\n          <h3>{title}</h3>\n          {description && <RichText render={description.raw} />}\n        </React.Fragment>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default ClassCard;\n"],"sourceRoot":""}