{"version":3,"sources":["webpack:///./src/components/HeadingOne.js","webpack:///./src/components/HeadingTwo.js","webpack:///./src/pages/index.js"],"names":["HeadingOne","styled","h1","HeadingTwo","h2","mainStyle","padding","color","overflow","SplashWrapper","div","Splash","props","url","breakpoints","md","lg","heading","el","emphasis","HeadingTop","HeadingBottom","Paragraph","Polygon","ProfileImage","img","IndexPage","home","data","prismicHome","style","Helmet","name","content","body","text","property","profile_image","splash_image","top_heading","bottom_heading","src","alt","render","raw"],"mappings":"8KAOeA,EAJIC,IAAOC,GAAV,6DAAGD,CAAH,uCCIDE,EAJIF,IAAOG,GAAV,iEAAGH,CAAH,uCCYVI,EAAY,CAChBC,QAAS,WACTC,MAAO,kBACPC,SAAU,QAGNC,EAAgBR,IAAOS,IAAV,uEAAGT,CAAH,4CAIbU,EAASV,IAAOS,IAAV,gEAAGT,CAAH,ilBAEQ,SAACW,GAAD,OAAWA,EAAMC,MAkBZC,IAAYC,GAIZD,IAAYE,GAeZF,IAAYC,GAIZD,IAAYE,IAM/BC,EAAU,SAACC,GAAD,OAAQjB,YAAOkB,YAASD,IAAxB,wDAAQjB,CAAR,uEAOVmB,EAAanB,YAAOgB,EAAQd,IAAlB,oEAAGF,CAAH,2DAGOa,IAAYC,IAI7BM,EAAgBpB,YAAOgB,EAAQjB,IAAlB,uEAAGC,CAAH,kGAGIa,IAAYC,GAIZD,IAAYE,IAK7BM,EAAYrB,IAAOS,IAAV,mEAAGT,CAAH,yHAOQa,IAAYC,IAK7BQ,EAAUtB,IAAOS,IAAV,iEAAGT,CAAH,sOASUa,IAAYC,GAIZD,IAAYE,IAK7BQ,EAAevB,IAAOwB,IAAV,sEAAGxB,CAAH,+KAQKa,IAAYC,IA6CpBW,UAvCG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACDC,YAAYD,KAE9B,OACE,wBAAME,MAAOzB,GACX,gBAAC0B,EAAA,EAAD,KACE,6DACA,wBAAMC,KAAK,cAAcC,QAASN,EAAKO,KAAKC,OAC5C,wBAAMC,SAAS,SAASH,QAAQ,KAChC,wBAAMG,SAAS,WAAWH,QAAQ,0BAClC,wBAAMG,SAAS,iBAAiBH,QAASN,EAAKO,KAAKC,OACnD,wBAAMC,SAAS,WAAWH,QAASN,EAAKU,cAAcxB,MACtD,wBAAMmB,KAAK,eAAeC,QAAQ,wBAClC,wBAAMD,KAAK,eAAeC,QAAQ,KAClC,wBAAMD,KAAK,gBAAgBC,QAAQ,0BACnC,wBAAMD,KAAK,sBAAsBC,QAASN,EAAKO,KAAKC,OACpD,wBAAMH,KAAK,gBAAgBC,QAASN,EAAKU,cAAcxB,OAGzD,gBAACJ,EAAD,KACE,gBAACE,EAAD,CAAQE,IAAKc,EAAKW,aAAazB,KAC7B,gBAACO,EAAD,KAAaO,EAAKY,YAAYJ,MAC9B,2BACA,gBAACd,EAAD,KAAgBM,EAAKa,eAAeL,MACpC,2BACA,gBAACX,EAAD,CACEiB,IAAKd,EAAKU,cAAcxB,IACxB6B,IAAKf,EAAKU,cAAcK,MAE1B,gBAACpB,EAAD,KACE,gBAAC,WAAD,CAAUqB,OAAQhB,EAAKO,KAAKU,OAE9B,gBAACrB,EAAD","file":"component---src-pages-index-js-00f30a1343c999cdf782.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeadingOne = styled.h1`\n  font-family: \"Poppins\", sans-serif;\n`;\n\nexport default HeadingOne;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeadingTwo = styled.h2`\n  font-family: \"Poppins\", sans-serif;\n`;\n\nexport default HeadingTwo;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { RichText } from \"prismic-reactjs\";\nimport { Helmet } from \"react-helmet\";\n\n// Styles\nimport emphasis from \"../styled/emphasis\";\nimport breakpoints from \"../styled/breakpoints\";\n\n// Components\nimport HeadingOne from \"../components/HeadingOne\";\nimport HeadingTwo from \"../components/HeadingTwo\";\n\nimport { graphql } from \"gatsby\";\n\nconst mainStyle = {\n  padding: \"0 1.5rem\",\n  color: \"var(--bg-color)\",\n  overflow: \"auto\",\n};\n\nconst SplashWrapper = styled.div`\n  background-color: var(--primary-color);\n`;\n\nconst Splash = styled.div`\n  position: relative;\n  background: url(${(props) => props.url});\n  background-size: cover;\n  background-color: var(--primary-color);\n  background-position: right;\n  color: var(--bg-color);\n  min-height: calc(100vh - 4rem);\n  padding: 6rem 3rem 2rem;\n\n  &:before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(var(--primary-rgb), 0.95);\n\n    @media (min-width: ${breakpoints.md}) {\n      width: 50%;\n    }\n\n    @media (min-width: ${breakpoints.lg}) {\n      width: 33.33%;\n    }\n  }\n\n  &:after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 0;\n    height: 100%;\n    background: rgba(33, 47, 60, 0.5);\n\n    @media (min-width: ${breakpoints.md}) {\n      width: 50%;\n    }\n\n    @media (min-width: ${breakpoints.lg}) {\n      width: 66.66%;\n    }\n  }\n`;\n\nconst heading = (el) => styled(emphasis(el))`\n  color: var(--bg-color);\n  position: relative;\n  z-index: 1;\n  margin: 1rem 0;\n`;\n\nconst HeadingTop = styled(heading(HeadingTwo))`\n  font-size: 3rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    font-size: 4rem;\n  }\n`;\nconst HeadingBottom = styled(heading(HeadingOne))`\n  font-size: 3rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    font-size: 5rem;\n  }\n\n  @media (min-width: ${breakpoints.lg}) {\n    font-size: 6rem;\n  }\n`;\n\nconst Paragraph = styled.div`\n  line-height: 1.5;\n  margin-top: 1rem;\n  max-width: 32rem;\n  position: relative;\n  z-index: 1;\n\n  @media (min-width: ${breakpoints.md}) {\n    margin-top: 2rem;\n  }\n`;\n\nconst Polygon = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  height: 8rem;\n  width: 100%;\n  background: rgba(var(--secondary-color-rgb), 0.2);\n  clip-path: polygon(0 0, 100% 45%, 100% 100%, 0 100%);\n\n  @media (min-width: ${breakpoints.md}) {\n    width: 50%;\n  }\n\n  @media (min-width: ${breakpoints.lg}) {\n    width: 33.33%;\n  }\n`;\n\nconst ProfileImage = styled.img`\n  position: relative;\n  z-index: 1;\n  border-radius: 50%;\n  border: solid 2px rgba(var(--complementary-rgb), 0.6);\n  width: 6rem;\n  height: 6rem;\n\n  @media (min-width: ${breakpoints.md}) {\n    width: 10rem;\n    height: 10rem;\n  }\n`;\n\nconst IndexPage = ({ data }) => {\n  const home = data.prismicHome.data;\n\n  return (\n    <main style={mainStyle}>\n      <Helmet>\n        <title>Home - Laura V Ferguson, PhD</title>\n        <meta name=\"description\" content={home.body.text} />\n        <meta property=\"og:url\" content=\"\" />\n        <meta property=\"og:title\" content=\"Laura V Ferguson, PhD\" />\n        <meta property=\"og:description\" content={home.body.text} />\n        <meta property=\"og:image\" content={home.profile_image.url} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\"></meta>\n        <meta name=\"twitter:site\" content=\"\" />\n        <meta name=\"twitter:title\" content=\"Laura V Ferguson, PhD\" />\n        <meta name=\"twitter:description\" content={home.body.text} />\n        <meta name=\"twitter:image\" content={home.profile_image.url} />\n      </Helmet>\n\n      <SplashWrapper>\n        <Splash url={home.splash_image.url}>\n          <HeadingTop>{home.top_heading.text}</HeadingTop>\n          <br />\n          <HeadingBottom>{home.bottom_heading.text}</HeadingBottom>\n          <br />\n          <ProfileImage\n            src={home.profile_image.url}\n            alt={home.profile_image.alt}\n          />\n          <Paragraph>\n            <RichText render={home.body.raw} />\n          </Paragraph>\n          <Polygon />\n        </Splash>\n      </SplashWrapper>\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    prismicHome(uid: { eq: \"home\" }) {\n      data {\n        top_heading {\n          text\n        }\n        bottom_heading {\n          text\n        }\n        body {\n          raw\n          text\n        }\n        profile_image {\n          url\n          alt\n        }\n        splash_image {\n          url\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}