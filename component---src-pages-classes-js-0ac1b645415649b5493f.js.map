{"version":3,"sources":["webpack:///./src/components/CardImage.js","webpack:///./src/components/ClassCard.js","webpack:///./src/pages/classes.js"],"names":["Image","styled","div","props","url","grayscale","Wrapper","EmbeddedText","FeaturedText","span","ClassCard","title","description","date","image","embedText","featured","CardImage","format","Date","render","raw","Grid","breakpoints","md","lg","xl","Link","GatsbyLink","ClassesPage","allClasses","data","allPrismicClass","edges","map","edge","node","c","i","key","to","uid","text","short_description"],"mappings":"+IAgDeA,EA7CDC,IAAOC,IAAV,mEAAGD,CAAH,wiBAciB,SAACE,GAAD,OAAWA,EAAMC,OAEvC,SAACD,GAAD,OAAYA,EAAME,UAAY,2BAA6B,MCZ3DC,EAAUL,IAAOC,IAAV,yEAAGD,CAAH,2DAMPM,EAAeN,IAAOC,IAAV,8EAAGD,CAAH,gGAQZO,EAAeP,IAAOQ,KAAV,8EAAGR,CAAH,iJA4CHS,IAjCG,SAAC,GAQZ,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,YACAC,EAKI,EALJA,KAKI,IAJJC,aAII,MAJI,GAIJ,MAHJC,iBAGI,aAFJC,gBAEI,aADJX,iBACI,SACJ,OACE,gBAACC,EAAD,KACGU,GAAY,gBAACR,EAAD,iBACZO,GACC,gBAACE,EAAD,CAAWb,IAAKU,EAAMV,IAAKC,UAAWA,GACpC,gBAACE,EAAD,KACGM,GAAQ,6BAAQK,YAAO,IAAIC,KAAKN,GAAO,QACxC,0BAAKF,GACJC,GAAe,gBAAC,WAAD,CAAUQ,OAAQR,EAAYS,SAIlDN,GACA,gBAAC,WAAD,KACE,gBAACE,EAAD,CAAWb,IAAKU,EAAMV,IAAKC,UAAWA,IACrCQ,GAAQ,6BAAQK,YAAO,IAAIC,KAAKN,GAAO,QACxC,0BAAKF,GACJC,GAAe,gBAAC,WAAD,CAAUQ,OAAQR,EAAYS,U,kCC1DxD,+FAUMC,EAAOrB,IAAOC,IAAV,gEAAGD,CAAH,qPAKasB,IAAYC,GAIZD,IAAYE,GAIZF,IAAYG,IAI7BC,EAAO1B,YAAO2B,KAAV,gEAAG3B,CAAH,sDAsDK4B,UAjDK,SAAC,GAAc,IAC3BC,EAD0B,EAAXC,KACGC,gBAAgBC,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKC,QACjE,OACE,gBAAC,IAAD,KACE,gEACA,gBAAC,IAAD,gBACA,gBAACd,EAAD,KACGQ,EAAWI,KAAI,SAACG,EAAGC,GAAJ,OACd,uBAAKC,IAAKD,GACR,gBAACX,EAAD,CAAMa,GAAE,YAAcH,EAAEI,KACtB,gBAAC,IAAD,CACE3B,MAAOuB,EAAEN,KAAKjB,MACdH,MAAO0B,EAAEN,KAAKpB,MAAM+B,KACpB9B,YAAayB,EAAEN,KAAKY,kBACpBtC,WAAW","file":"component---src-pages-classes-js-0ac1b645415649b5493f.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst Image = styled.div`\n  position: relative;\n  width: 100%;\n  padding-top: 56.25%;\n\n  border-bottom: 0.25rem solid var(--complementary-color);\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${(props) => props.url});\n    background-size: cover;\n    ${(props) => (props.grayscale ? \"filter: grayscale(100%);\" : \"\")}\n    transition: filter 100ms;\n  }\n\n  &:hover:before {\n    filter: grayscale(0%);\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      335deg,\n      rgba(var(--tertiary-color-rgb), 0.8) 0%,\n      rgba(var(--complementary-rgb), 0.25) 100%\n    );\n    opacity: 1;\n    transition: opacity 100ms;\n  }\n\n  &:hover:after {\n    opacity: 0.2;\n  }\n`;\n\nexport default Image;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { RichText } from \"prismic-reactjs\";\nimport { format } from \"date-fns\";\n\nimport CardImage from \"./CardImage\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst EmbeddedText = styled.div`\n  position: relative;\n  z-index: 1;\n  padding: 0.5rem 1rem;\n  color: white;\n  background: rgba(80, 80, 80, 0.8);\n`;\n\nconst FeaturedText = styled.span`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  color: var(--bg-color);\n  background: var(--tertiary-color);\n  padding: 0.25rem 0.375rem;\n  font-size: 1rem;\n  z-index: 1;\n`;\n\nconst ClassCard = ({\n  title,\n  description,\n  date,\n  image = {},\n  embedText = false,\n  featured = false,\n  grayscale = false,\n}) => {\n  return (\n    <Wrapper>\n      {featured && <FeaturedText>Top-News</FeaturedText>}\n      {embedText && (\n        <CardImage url={image.url} grayscale={grayscale}>\n          <EmbeddedText>\n            {date && <small>{format(new Date(date), \"PPP\")}</small>}\n            <h3>{title}</h3>\n            {description && <RichText render={description.raw} />}\n          </EmbeddedText>\n        </CardImage>\n      )}\n      {!embedText && (\n        <React.Fragment>\n          <CardImage url={image.url} grayscale={grayscale} />\n          {date && <small>{format(new Date(date), \"PPP\")}</small>}\n          <h3>{title}</h3>\n          {description && <RichText render={description.raw} />}\n        </React.Fragment>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default ClassCard;\n","import * as React from \"react\";\nimport { Link as GatsbyLink } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport Title from \"../components/Title\";\nimport Main from \"../components/Main\";\nimport ClassCard from \"../components/ClassCard\";\n\nimport breakpoints from \"../styled/breakpoints\";\n\nconst Grid = styled.div`\n  display: grid;\n  gap: 0.5rem;\n  grid-template-columns: repeat(1, 1fr);\n\n  @media (min-width: ${breakpoints.md}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: ${breakpoints.lg}) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media (min-width: ${breakpoints.xl}) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\nconst Link = styled(GatsbyLink)`\n  color: var(--primary-color);\n  text-decoration: none;\n`;\n\nconst ClassesPage = ({ data }) => {\n  const allClasses = data.allPrismicClass.edges.map((edge) => edge.node);\n  return (\n    <Main>\n      <title>Classes - Laura V Ferguson, PhD</title>\n      <Title>Classes</Title>\n      <Grid>\n        {allClasses.map((c, i) => (\n          <div key={i}>\n            <Link to={`/classes/${c.uid}`}>\n              <ClassCard\n                image={c.data.image}\n                title={c.data.title.text}\n                description={c.data.short_description}\n                grayscale={true}\n              />\n            </Link>\n          </div>\n        ))}\n      </Grid>\n    </Main>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allPrismicClass {\n      edges {\n        node {\n          uid\n          data {\n            title {\n              text\n            }\n            start_date\n            short_description {\n              raw\n            }\n            image {\n              url\n              alt\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ClassesPage;\n"],"sourceRoot":""}